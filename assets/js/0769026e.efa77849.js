"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5124],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>b});var o=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,i=function(e,t){if(null==e)return{};var n,o,i={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=o.createContext({}),s=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=s(e.components);return o.createElement(l.Provider,{value:t},e.children)},m="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=s(n),u=i,b=m["".concat(l,".").concat(u)]||m[u]||h[u]||r;return n?o.createElement(b,a(a({ref:t},p),{},{components:n})):o.createElement(b,a({ref:t},p))}));function b(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,a=new Array(r);a[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[m]="string"==typeof e?e:i,a[1]=c;for(var s=2;s<r;s++)a[s]=n[s];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},96163:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>s});var o=n(87462),i=(n(67294),n(3905));const r={title:"Solomachine",sidebar_label:"Solomachine",sidebar_position:1,slug:"/ibc/light-clients/solomachine/solomachine"},a="solomachine",c={unversionedId:"ibc/solomachine/solomachine",id:"version-v7.3.x/ibc/solomachine/solomachine",title:"Solomachine",description:"Abstract",source:"@site/versioned_docs/version-v7.3.x/03-ibc/02-solomachine/01-solomachine.md",sourceDirName:"03-ibc/02-solomachine",slug:"/ibc/light-clients/solomachine/solomachine",permalink:"/v7.3.x/ibc/light-clients/solomachine/solomachine",draft:!1,tags:[],version:"v7.3.x",sidebarPosition:1,frontMatter:{title:"Solomachine",sidebar_label:"Solomachine",sidebar_position:1,slug:"/ibc/light-clients/solomachine/solomachine"},sidebar:"defaultSidebar",previous:{title:"Setup",permalink:"/v7.3.x/ibc/light-clients/setup"},next:{title:"Concepts",permalink:"/v7.3.x/ibc/light-clients/solomachine/concepts"}},l={},s=[{value:"Abstract",id:"abstract",level:2},{value:"Contents",id:"contents",level:2}],p={toc:s},m="wrapper";function h(e){let{components:t,...n}=e;return(0,i.kt)(m,(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"solomachine"},(0,i.kt)("inlineCode",{parentName:"h1"},"solomachine")),(0,i.kt)("h2",{id:"abstract"},"Abstract"),(0,i.kt)("p",null,"This paper defines the implementation of the ICS06 protocol on the Cosmos SDK. For the general\nspecification please refer to the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/cosmos/ibc/tree/master/spec/client/ics-006-solo-machine-client"},"ICS06 Specification"),"."),(0,i.kt)("p",null,"This implementation of a solo machine light client supports single and multi-signature public\nkeys. The client is capable of handling public key updates by header and governance proposals.\nThe light client is capable of processing client misbehaviour. Proofs of the counterparty state\nare generated by the solo machine client by signing over the desired state with a certain sequence,\ndiversifier, and timestamp. "),(0,i.kt)("h2",{id:"contents"},"Contents"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("a",{parentName:"strong",href:"/v7.3.x/ibc/light-clients/solomachine/concepts"},"Concepts"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("a",{parentName:"strong",href:"/v7.3.x/ibc/light-clients/solomachine/state"},"State"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("a",{parentName:"strong",href:"/v7.3.x/ibc/light-clients/solomachine/state_transitions"},"State Transitions")))))}h.isMDXComponent=!0}}]);